apiVersion: v1
kind: Namespace
metadata:
  name: k8s-papivot-tools
  labels:
    name: k8s-papivot-tools
    app: k8s-papivot-tools
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: installation-scripts
  namespace: k8s-papivot-tools
data:
  wait.sh: |
    #!/bin/bash
    # Modify the wait script to suit your node ready logic
    # E.g. Sleep for 5 mins to allow node to be ready
    sleep 5m

  install.sh: |
    #!/bin/bash
    if [ ! -f /tmp/install/installation-complete.txt ]
    then
    # --------- Add your node and OS specific commands that need to be executed -----
    # --------- All files are located and executed from /tmp/install folder --------
      tdnf install falco -y
      cp /tmp/install/falco.service /etc/systemd/system/falco.service
      chmod 644 /etc/systemd/system/falco.service
      systemctl enable falco

    # ----------- Do not modify the lines below ---------------
      touch /tmp/install/installation-complete.txt
    else
      # Script execution was completed previously. Exit gracefully.
      exit 0
    fi

  falco.service: |
    [Unit]
    Description=Falco Runtime Security

    [Service]
    ExecStartPre=/usr/sbin/insmod /usr/lib/modules/%v/extra/falco.ko
    ExecStart=/usr/bin/falco --pidfile=/var/run/falco.pid -c /etc/falco/falco.yaml
    ExecReload=/bin/kill -HUP $MAINPID
    KillMode=process
    Restart=always
    RestartSec=5
    
    [Install]
    WantedBy=multi-user.target

  # Add additonal files to be passed thru configmap here
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-configure
  namespace: k8s-papivot-tools
spec:
  selector:
    matchLabels:
      name: node-configure-job
  template:
    metadata:
      labels:
        name: node-configure-job
    spec:
      hostPID: true
      containers:
      - env:
        - name: TINI_SUBREAPER
      - image: whoami6443/node-execution:0.0.3
        name: node-configure-pod
        securityContext:
          privileged: true
        volumeMounts:
        - name: install-script
          mountPath: /host-install-files
        - name: host-mount
          mountPath: /host
      volumes:
      - name: install-script
        configMap:
          name: installation-scripts
      - name: host-mount
        hostPath:
          path: /tmp/install
# Use these to control the nodes on which to execute the scripts. 
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
